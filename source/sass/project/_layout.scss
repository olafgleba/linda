/**
 * layout.scss
 */

html {
  font-family: 'proxima-nova-1', 'proxima-nova-2', sans-serif;
}


body { }



// a {
//   transition: background-color 0.15s;
//   text-decoration: underline;
//   color: $base-link-color;
//
//   &:hover, &:active, &:focus {
//     color: $base-link-hover-color;
//     text-decoration: none;
//   }
// }



.page {
  margin: 0 auto;
  max-width: 64em;
  padding: $base-spacing-unit;
}



/**
 * SVG icon sprite
 */

.icon {
  width: ($base-font-size / 16px) * 1em;
  height: ($base-font-size / 16px) * 1em;
  vertical-align: middle;
  display: inline-block;

  transition: all 0.25s;
  fill: $icon-fill-color;

  a:hover & {
    fill: lighten($icon-fill-color, 40%);
  }
}

.icon--large {
  width: (($base-font-size * 2) / 16px) * 1em;
  height: (($base-font-size * 2) / 16px) * 1em;
}

.icon--huge {
  width: (($base-font-size * 4) / 16px) * 1em;
  height: (($base-font-size * 4) / 16px) * 1em;
}


/**
 * Single icons
 */
// ...




/**
 * Enable automativ calculation of `srcset` and `sizes`
 */

// scss-lint:disable QualifyingElement

img[data-sizes="auto"] {
  display: block;
  max-width: none;
  width: 100%;
  height: auto;
}
// scss-lint:enable QualifyingElement


/**
 * Enable transitions for layzy loaded images
 *
 */
.lazyload,
.lazyloading {
  opacity: 0 !important;
}

.lazyloaded {
  opacity: 1;
  transition: opacity 0.25s ease-in !important;
}



/**
 * list of headings
 * @string {String}
 */
$headings: 'h1, h2, h3, h4, h5, h6';

@each $item in $headings {
  #{$item} {
    font-style: normal;
    font-weight: inherit;
  }
}




// overwrite fluidbox vendor declaration
// s. _fluidbox.scss (v. 1.4.3), line 56
.fluidbox-ghost {
  transition-duration: $transition-duration, $transition-duration;
}

/**
 * Container for status loading animation, s. next below `progress`
 *
 * Appended dynamically to fluidbox loading event state (s. base.js)
 */
.is-loading-fluidbox {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

/**
 * Loading spinner, css animation
 *
 * Markup dynamically set in base.js:
 *   <div class="progress [progress--large][progress--small]"></div>
 */
@keyframes progress {
  to {transform: rotate(360deg);}
}

.progress {
  position: relative;
  min-width: 50px;
  min-height: 50px;
}

.progress::before {
  content: 'Loading...';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 24px;
  height: 24px;
  margin-top: -13px; /* width/2 + 1 */
  margin-left: -13px; /* width/2 + 1 */
}

.progress:not(:required)::before {
  content: '';
  border-radius: 50%;
  border-style: solid;
  border-color: $progress-border-color;
  border-top-color: $progress-border-top-color;
  animation: progress 0.6s linear infinite;
}

// Modifier
.progress--large {
  &::before {
    width: 48px;
    height: 48px;
    margin-top: -25px; /* width/2 + 1 */
    margin-left: -25px; /* width/2 + 1 */
  }

  &:not(:required)::before {
    border-width: 6px;
  }
}

.progress--small {
  &::before {
    width: 16px;
    height: 16px;
    margin-top: -9px; /* width/2 + 1 */
    margin-left: -9px; /* width/2 + 1 */
  }

  &:not(:required)::before {
    border-width: 2px;
  }
}





/**
 * Image Gallery (fluidbox)
 */
.gallery {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

.gallery a {
  margin-bottom: 1%;
}

.col-4 {
  width: 49%;
  // fallback for .no-flexbox browser
  display: inline-block;

  @include media-query (lap) {
    width: 32%;
  }

  @include media-query (desk) {
    width: 24%;
  }
}







/*header*/.page-header {

}

/*header*/.page-header--banner {

}

/*main*/.page-content {

}


/*aside*/.sidebar {

}


/*footer*/.page-footer {

}

/*footer*/.page-footer--contentinfo {

}


/*hx*/.section-heading {

}


/*div*/.section-body {

}



// .logo {
//   width: 200px;
//   height: 47px;
//   background: transparent url('../img/logo.svg') 0 0 no-repeat;
//   background-size: contain;
//   text-indent: -9999px;
//   line-height: 1;
//   margin-bottom: 0;
// }





/**
 * Framework related styles
 */

// scss-lint:disable SelectorDepth
// scss-lint:disable ColorKeyword
// scss-lint:disable ColorVariable

.framework .grid,
.framework .flexgrid {
  margin-bottom: 3em;
}

.framework .grid__cell > div,
.framework .flexgrid__cell > div {
  background-color: $framework-accent-color;
  //margin-bottom: 1em;
}

.framework .grid__cell .grid__cell > div,
.framework .flexgrid__cell .flexgrid__cell > div {
  background-color: green;
  //margin-bottom: 1em;
}

.framework .grid__cell,
.framework .flexgrid__cell {
  //margin-bottom: 2em;
}

// scss-lint:enable SelectorDepth
// scss-lint:enable ColorKeyword
// scss-lint:enable ColorVariable



/**
 * Override some defaults for the CKEditor
 */

// scss-lint:disable SelectorFormat
// scss-lint:disable ColorKeyword
// scss-lint:disable ColorVariable

/*body*/.cke_editable {
  margin: $base-spacing-unit--tiny;
  background-color: white;

  ul {
    margin-left: 15px;
  }
}

// scss-lint:enable SelectorFormat
// scss-lint:enable ColorKeyword
// scss-lint:enable ColorVariable
